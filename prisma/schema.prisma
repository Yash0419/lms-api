// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  name String
  phone String @unique
  email String @unique
  password String
  created_at DateTime @default(now())
  update_at DateTime @updatedAt

  members Member[]
  @@map("users")
}

model Book {
   id Int @id @default(autoincrement()) 
  tittle String
   isbn Int @unique
  publisher String
  published_date DateTime
  author String
  category String
  availabel_copies Int @default(1)
  total_copies Int
    created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  transactions Transaction[]

@@map("books")
}

model Member {
  id Int @id @default(autoincrement())
  name String
  user_id Int
  phone String
  address String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
 
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
transactions Transaction[]
  @@map("members")
}
enum TransactionType{
Borrow
Return
}
model Transaction {
  id Int @id @default(autoincrement())
  deadline Int
  member_id Int
  book_id Int
  transaction_type TransactionType
   created_at DateTime @default(now())
  updated_at DateTime @updatedAt

 member Member @relation(fields: [member_id], references: [id])
  book Book @relation(fields: [book_id], references: [id])

  @@map("transactions")
}